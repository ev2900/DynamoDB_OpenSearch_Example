Description: This template will deploy DynamoDB, Lambda, OpenSearch domain

Resources:

  # -----------------
  # DynamoDB
  # -----------------
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: workshop-table
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "person-id"
          AttributeType: "N"
      KeySchema: 
        - AttributeName: "person-id"
          KeyType: "HASH"

  # -----------------
  # IAM Role
  # -----------------
  LambdaIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 'Lambda-MSK-OpenSearch-Role'
      Description: 'IAM role for Lambda Function to use'
      # Trust relationships
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      # Premissions
      Policies:
        # DynamoDB
        - PolicyName: dynamo_read
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - 'dynamodb:*'
                Resource: 
                  - 'arn:aws:dynamodb:us-east-1:*:*'
        - PolicyName: lambda_logs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'logs:*'
                Resource: '*'

  # -----------------
  # Lambda
  # ----------------- 
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: 'dynamodb-os-lambda'
      Runtime: 'python3.9'
      Architectures:
        - 'x86_64'
      Role: !GetAtt LambdaIAMRole.Arn
      Handler: 'index.lambda_handler'
      Code: 
        ZipFile: |
          
          # Replace me with code

  # -----------------
  # OpenSearch
  # -----------------
  OpenSearchDomain:
    Type: AWS::OpenSearchService::Domain
    Properties:
      DomainName: workshop-domain
      EngineVersion: 'OpenSearch_1.3'
      # Development configuration
      ClusterConfig:
        DedicatedMasterEnabled: false
        InstanceCount: '1'
        ZoneAwarenessEnabled: false
        InstanceType: 'r6g.large.search'
      EBSOptions:
        EBSEnabled: true
        VolumeSize: '20'
        VolumeType: 'gp2'
      # Node to node encrpytion must be enabled to use the advanced security options
      NodeToNodeEncryptionOptions:
        Enabled: true
      # Encryption at rest must be ebabled to use the advanced security options
      EncryptionAtRestOptions:
        Enabled: true
      # HTTPS must be required to use the advanced security options
      DomainEndpointOptions:
        EnforceHTTPS: true
      # Create a master user with a pre-defined username and password
      AdvancedSecurityOptions:
        Enabled: true
        InternalUserDatabaseEnabled: true
        MasterUserOptions:
          MasterUserName: 'OSMasterUser'
          MasterUserPassword: 'AwS#OpenSearch1'
      # Set an access policy open to any AWS resource
      AccessPolicies:
        Version: 2012-10-17
        Statement:
          Effect: 'Allow'
          Principal:
            AWS: '*'
          Action: 'es:*'
          Resource: '*'